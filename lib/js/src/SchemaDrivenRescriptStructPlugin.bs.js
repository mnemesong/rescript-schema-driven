// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Caml_exceptions = require("rescript/lib/js/caml_exceptions.js");
var SchemaDrivenResultCode = require("./SchemaDrivenResultCode.bs.js");

var RescriptStructExn = /* @__PURE__ */Caml_exceptions.create("SchemaDrivenRescriptStructPlugin.RescriptStructExn");

function structErrToExn(res) {
  if (res.TAG === /* Ok */0) {
    return {
            TAG: /* Ok */0,
            _0: res._0
          };
  } else {
    return {
            TAG: /* Error */1,
            _0: {
              RE_EXN_ID: RescriptStructExn,
              _1: res._0
            }
          };
  }
}

async function thenStructErrToExn(res) {
  return structErrToExn(await res);
}

var rescriptStructParse = "let parse = (x) => x->S.parseWith(struct)\n->SchemaDrivenRescriptStructPlugin.structErrToExn";

var rescriptStructParseAny = "let parseAny = (x) => x->S.parseAnyWith(struct)\n->SchemaDrivenRescriptStructPlugin.structErrToExn";

var rescriptStructParseJson = "let parseJson = (x) => x->S.parseJsonWith(struct)\n->SchemaDrivenRescriptStructPlugin.structErrToExn";

var rescriptStructParseAsync = "let parseAsync = (x) => x->S.parseAsyncWith(struct)\n->SchemaDrivenRescriptStructPlugin.thenStructErrToExn";

var rescriptStructSerialize = "let serialize = (x) => x->S.serializeWith(struct)\n->SchemaDrivenRescriptStructPlugin.structErrToExn";

var rescriptStructSerializeToUnknown = "let serializeToUnknown = (x) => x->S.serializeToUnknownWith(struct)\n->SchemaDrivenRescriptStructPlugin.structErrToExn";

var rescriptStructSerializeToJson = "let serializeToJson = (x) => x->S.serializeToJsonWith(struct)\n->SchemaDrivenRescriptStructPlugin.structErrToExn";

function plugin(resultCodeDeclar) {
  return SchemaDrivenResultCode.addModuleType(SchemaDrivenResultCode.filterModuleTypes(SchemaDrivenResultCode.addFuncs(resultCodeDeclar, [
                      rescriptStructParse,
                      rescriptStructParseAny,
                      rescriptStructParseJson,
                      rescriptStructParseAsync,
                      rescriptStructSerialize,
                      rescriptStructSerializeToUnknown,
                      rescriptStructSerializeToJson
                    ]), (function (mt) {
                    return !mt.includes("SchemaDrivenModule.SchemaDrivenModule");
                  })), "SchemaDrivenRescriptStructPlugin.ModuleType with type t = " + resultCodeDeclar.t);
}

exports.RescriptStructExn = RescriptStructExn;
exports.structErrToExn = structErrToExn;
exports.thenStructErrToExn = thenStructErrToExn;
exports.rescriptStructParse = rescriptStructParse;
exports.rescriptStructParseAny = rescriptStructParseAny;
exports.rescriptStructParseJson = rescriptStructParseJson;
exports.rescriptStructParseAsync = rescriptStructParseAsync;
exports.rescriptStructSerialize = rescriptStructSerialize;
exports.rescriptStructSerializeToUnknown = rescriptStructSerializeToUnknown;
exports.rescriptStructSerializeToJson = rescriptStructSerializeToJson;
exports.plugin = plugin;
/* No side effect */
