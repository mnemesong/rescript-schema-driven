// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var ResultExn = require("rescript-result-exn/lib/js/src/ResultExn.bs.js");
var Belt_Array = require("rescript/lib/js/belt_Array.js");
var SchemaDrivenModule = require("./SchemaDrivenModule.bs.js");
var SchemaDrivenNamesCorrector = require("./SchemaDrivenNamesCorrector.bs.js");

var def = (function (path, plugins) {
  return {
    path: path,
    plugins: plugins
  };
});

var path = (function (dir) {
  return dir.path;
});

var plugins = (function (dir) {
  return dir.plugins;
});

function cleanDirectory(eng) {
  var clean = (function (directory) {
    const fs = require("fs");
    const path = require("path");
    fs.readdir(directory, (err, files) => {
      if (err) throw err;
      for (const file of files) {
        fs.unlink(path.join(directory, file), (err) => {
          if (err) throw err;
        });
      }
    });
  });
  return ResultExn.tryExec(function (param) {
              clean(path(eng));
            });
}

function printModule(eng, moduleName, code) {
  var resolvePath = (function(parts) {
    return require("path").resolve(...parts);
  });
  var writeFileSync = (function (file, data) {
    return require("fs").writeFileSync(file, data);
  });
  var moduleName$p = SchemaDrivenNamesCorrector.modifyModuleName(moduleName);
  var moduleFilePath = ResultExn.tryExec(function (param) {
        return resolvePath([
                    path(eng),
                    moduleName$p + ".res"
                  ]);
      });
  var code$p = code + Belt_Array.map(plugins(eng), (function (p) {
            return p.moduleBody;
          })).join("\n\n");
  var result = ResultExn.flatMap(moduleFilePath, (function (p) {
          return ResultExn.tryExec(function (param) {
                      writeFileSync(p, code$p);
                    });
        }));
  return ResultExn.map(result, (function (param) {
                return SchemaDrivenModule.def(moduleName$p);
              }));
}

exports.def = def;
exports.path = path;
exports.plugins = plugins;
exports.cleanDirectory = cleanDirectory;
exports.printModule = printModule;
/* No side effect */
