// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Belt_Array = require("rescript/lib/js/belt_Array.js");
var SchemaDrivenModule = require("./SchemaDrivenModule.bs.js");
var SchemaDrivenResultCode = require("./SchemaDrivenResultCode.bs.js");
var SchemaDrivenNamesCorrector = require("./SchemaDrivenNamesCorrector.bs.js");

function printStruct(variants, tagName) {
  var variantRows = Belt_Array.map(variants, (function (v) {
          var varName$p = SchemaDrivenNamesCorrector.modifyVariantName(v._0);
          var propRows = Belt_Array.map(v._1, (function (p) {
                  var propName = p._0;
                  return "      " + propName + ": o->S.field(\"" + propName + "\", " + SchemaDrivenModule.moduleName(p._1) + ".struct)";
                }));
          return "  S.object(o => {\n    ignore(o->S.field(\"" + tagName + "\", S.literal(String(\"" + varName$p + "\"))))\n    " + varName$p + "({\n" + propRows.join(",\n") + "\n    })\n  })";
        }));
  return "S.union([\n" + variantRows.join(",\n") + "\n])";
}

function printType(variants) {
  var variantRows = Belt_Array.map(variants, (function (v) {
          var propRows = Belt_Array.map(v._1, (function (p) {
                  return "      " + p._0 + ": " + SchemaDrivenModule.moduleName(p._1) + ".t";
                }));
          return "  | " + SchemaDrivenNamesCorrector.modifyVariantName(v._0) + "({\n" + propRows.join(",\n") + "\n    })";
        }));
  return "\n" + variantRows.join("\n");
}

function makeResultCode(moduleName, variants, tagName) {
  return SchemaDrivenResultCode.make(moduleName, printType(variants), printStruct(variants, tagName));
}

exports.printStruct = printStruct;
exports.printType = printType;
exports.makeResultCode = makeResultCode;
/* No side effect */
