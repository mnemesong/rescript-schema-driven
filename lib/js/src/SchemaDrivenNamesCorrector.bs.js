// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';


function unallowedCharFilterFunc(c, i) {
  var firstSymbolRegEx = /[a-zA-Z_]/;
  var otherSymbolsRegEx = /[a-zA-Z0-9_]/;
  if (i === 0) {
    return firstSymbolRegEx.test(c);
  } else {
    return otherSymbolsRegEx.test(c);
  }
}

function modifyVariableName(varName) {
  return varName.split("").filter(unallowedCharFilterFunc).map(function (c, i) {
                if (i === 0) {
                  return c.toLowerCase();
                } else {
                  return c;
                }
              }).join("");
}

function modifyVariantName(varName) {
  return varName.split("").filter(unallowedCharFilterFunc).map(function (c, i) {
                if (i === 0) {
                  return c.toUpperCase();
                } else {
                  return c;
                }
              }).join("");
}

function modifyPolymorficVariantName(varName) {
  return varName.split("").filter(unallowedCharFilterFunc).join("");
}

var modifyModuleName = modifyVariantName;

exports.unallowedCharFilterFunc = unallowedCharFilterFunc;
exports.modifyVariableName = modifyVariableName;
exports.modifyVariantName = modifyVariantName;
exports.modifyModuleName = modifyModuleName;
exports.modifyPolymorficVariantName = modifyPolymorficVariantName;
/* No side effect */
