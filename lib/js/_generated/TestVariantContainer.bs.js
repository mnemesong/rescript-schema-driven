// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var TestOptionStr = require("./TestOptionStr.bs.js");
var S$RescriptStruct = require("rescript-struct/lib/js/src/S.bs.js");
var SchemaDrivenFloat = require("../src/SchemaDrivenFloat.bs.js");
var SchemaDrivenString = require("../src/SchemaDrivenString.bs.js");
var SchemaDrivenRescriptStructPlugin = require("../src/SchemaDrivenRescriptStructPlugin.bs.js");

var struct = S$RescriptStruct.union([
      S$RescriptStruct.$$Object.strip(S$RescriptStruct.object(function (o) {
                S$RescriptStruct.field(o, "TAG", S$RescriptStruct.literal({
                          TAG: /* String */0,
                          _0: "Var1"
                        }));
                return {
                        TAG: /* Var1 */0,
                        _0: S$RescriptStruct.field(o, "t_0", SchemaDrivenFloat.struct)
                      };
              })),
      S$RescriptStruct.$$Object.strip(S$RescriptStruct.object(function (o) {
                S$RescriptStruct.field(o, "TAG", S$RescriptStruct.literal({
                          TAG: /* String */0,
                          _0: "Var2"
                        }));
                return {
                        TAG: /* Var2 */1,
                        _0: S$RescriptStruct.field(o, "t_0", TestOptionStr.struct),
                        _1: S$RescriptStruct.field(o, "t_1", SchemaDrivenFloat.struct)
                      };
              })),
      S$RescriptStruct.$$Object.strip(S$RescriptStruct.object(function (o) {
                S$RescriptStruct.field(o, "TAG", S$RescriptStruct.literal({
                          TAG: /* String */0,
                          _0: "Var3"
                        }));
                return {
                        TAG: /* Var3 */2,
                        _0: S$RescriptStruct.field(o, "t_0", SchemaDrivenString.struct)
                      };
              }))
    ]);

var allVariants = [
  "var1",
  "var2",
  "var3"
];

function parse(x) {
  return SchemaDrivenRescriptStructPlugin.structErrToExn(S$RescriptStruct.parseWith(x, struct));
}

function parseAny(x) {
  return SchemaDrivenRescriptStructPlugin.structErrToExn(S$RescriptStruct.parseAnyWith(x, struct));
}

function parseJson(x) {
  return SchemaDrivenRescriptStructPlugin.structErrToExn(S$RescriptStruct.parseJsonWith(x, struct));
}

function parseAsync(x) {
  return SchemaDrivenRescriptStructPlugin.thenStructErrToExn(S$RescriptStruct.parseAsyncWith(x, struct));
}

function serialize(x) {
  return SchemaDrivenRescriptStructPlugin.structErrToExn(S$RescriptStruct.serializeWith(x, struct));
}

function serializeToUnknown(x) {
  return SchemaDrivenRescriptStructPlugin.structErrToExn(S$RescriptStruct.serializeToUnknownWith(x, struct));
}

function serializeToJson(x) {
  return SchemaDrivenRescriptStructPlugin.structErrToExn(S$RescriptStruct.serializeToJsonWith(x, undefined, struct));
}

exports.allVariants = allVariants;
exports.struct = struct;
exports.parse = parse;
exports.parseAny = parseAny;
exports.parseJson = parseJson;
exports.parseAsync = parseAsync;
exports.serialize = serialize;
exports.serializeToUnknown = serializeToUnknown;
exports.serializeToJson = serializeToJson;
/* struct Not a pure module */
