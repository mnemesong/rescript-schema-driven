// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var TestArray = require("./TestArray.bs.js");
var S$RescriptStruct = require("rescript-struct/lib/js/src/S.bs.js");
var TestVariantLiteral = require("./TestVariantLiteral.bs.js");
var SchemaDrivenRescriptStructPlugin = require("../src/SchemaDrivenRescriptStructPlugin.bs.js");

var struct = S$RescriptStruct.union([
      S$RescriptStruct.object(function (o) {
            S$RescriptStruct.field(o, "crazyTaggedVariant", S$RescriptStruct.literal({
                      TAG: /* String */0,
                      _0: "Fruit"
                    }));
            return {
                    TAG: /* Fruit */0,
                    _0: S$RescriptStruct.field(o, "t_0", TestVariantLiteral.struct)
                  };
          }),
      S$RescriptStruct.object(function (o) {
            S$RescriptStruct.field(o, "crazyTaggedVariant", S$RescriptStruct.literal({
                      TAG: /* String */0,
                      _0: "FruitSet"
                    }));
            return {
                    TAG: /* FruitSet */1,
                    _0: S$RescriptStruct.field(o, "t_0", TestArray.struct)
                  };
          })
    ]);

function parse(x) {
  return SchemaDrivenRescriptStructPlugin.structErrToExn(S$RescriptStruct.parseWith(x, struct));
}

function parseAny(x) {
  return SchemaDrivenRescriptStructPlugin.structErrToExn(S$RescriptStruct.parseAnyWith(x, struct));
}

function parseJson(x) {
  return SchemaDrivenRescriptStructPlugin.structErrToExn(S$RescriptStruct.parseJsonWith(x, struct));
}

function parseAsync(x) {
  return SchemaDrivenRescriptStructPlugin.thenStructErrToExn(S$RescriptStruct.parseAsyncWith(x, struct));
}

function serialize(x) {
  return SchemaDrivenRescriptStructPlugin.structErrToExn(S$RescriptStruct.serializeWith(x, struct));
}

function serializeToUnknown(x) {
  return SchemaDrivenRescriptStructPlugin.structErrToExn(S$RescriptStruct.serializeToUnknownWith(x, struct));
}

function serializeToJson(x) {
  return SchemaDrivenRescriptStructPlugin.structErrToExn(S$RescriptStruct.serializeToJsonWith(x, undefined, struct));
}

exports.struct = struct;
exports.parse = parse;
exports.parseAny = parseAny;
exports.parseJson = parseJson;
exports.parseAsync = parseAsync;
exports.serialize = serialize;
exports.serializeToUnknown = serializeToUnknown;
exports.serializeToJson = serializeToJson;
/* struct Not a pure module */
