// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Belt_Result = require("rescript/lib/js/belt_Result.js");
var S$RescriptStruct = require("rescript-struct/lib/js/src/S.bs.js");
var Mocha$RescriptMocha = require("rescript-mocha/lib/js/src/Mocha.bs.js");
var SchemaDrivenUnknown = require("../src/SchemaDrivenUnknown.bs.js");
var Assert$RescriptMocha = require("rescript-mocha/lib/js/src/Assert.bs.js");

Mocha$RescriptMocha.describe("SchemaDrivenUnknownTest")(undefined, undefined, undefined, (function (param) {
        Mocha$RescriptMocha.it("test assertion")(undefined, undefined, undefined, (function (param) {
                var result = S$RescriptStruct.parseWith("dsafsa", SchemaDrivenUnknown.struct);
                var nominal = {
                  TAG: /* Ok */0,
                  _0: "dsafsa"
                };
                Assert$RescriptMocha.deep_equal(undefined, result, nominal);
              }));
        Mocha$RescriptMocha.it("test assertion2")(undefined, undefined, undefined, (function (param) {
                var result = S$RescriptStruct.parseWith(18.2, SchemaDrivenUnknown.struct);
                var nominal = {
                  TAG: /* Ok */0,
                  _0: 18.2
                };
                Assert$RescriptMocha.deep_equal(undefined, result, nominal);
              }));
        Mocha$RescriptMocha.it("test assertion")(undefined, undefined, undefined, (function (param) {
                var result = S$RescriptStruct.parseWith({id: null}, SchemaDrivenUnknown.struct);
                var nominal = {
                  TAG: /* Ok */0,
                  _0: {id: null}
                };
                Assert$RescriptMocha.deep_equal(undefined, result, nominal);
              }));
        Mocha$RescriptMocha.it("test serialization")(undefined, undefined, undefined, (function (param) {
                var given = {id: null};
                var result = Belt_Result.flatMap(S$RescriptStruct.serializeToJsonWith(given, undefined, SchemaDrivenUnknown.struct), (function (s) {
                        return S$RescriptStruct.parseJsonWith(s, SchemaDrivenUnknown.struct);
                      }));
                Assert$RescriptMocha.ok(Belt_Result.isError(result));
              }));
      }));

/*  Not a pure module */
