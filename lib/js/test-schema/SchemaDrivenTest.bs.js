// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Belt_Result = require("rescript/lib/js/belt_Result.js");
var SchemaDriven = require("../src/SchemaDriven.bs.js");
var SchemaDrivenRescriptStructPlugin = require("../src/SchemaDrivenRescriptStructPlugin.bs.js");

var _genDir = (require("path").resolve(module.path, "..", "..", "..", "_generated"));

var eng = Belt_Result.getExn(SchemaDriven.defEngine(_genDir, [SchemaDrivenRescriptStructPlugin.plugin], /* RemoveAllFilesFromDir */0));

var testOptionInt = Belt_Result.getExn(SchemaDriven.optionNull("TestOptionInt", SchemaDriven.$$int, eng));

var testOptionStr = Belt_Result.getExn(SchemaDriven.optionNull("TestOptionStr", SchemaDriven.string, eng));

var testPersonRec = Belt_Result.getExn(SchemaDriven.record("Test-Person", [
          /* Field */{
            _0: "id",
            _1: SchemaDriven.$$int
          },
          /* Field */{
            _0: "ages",
            _1: testOptionInt
          },
          /* Field */{
            _0: "name",
            _1: SchemaDriven.string
          }
        ], eng));

var testProfileObj = Belt_Result.getExn(SchemaDriven.object("Test Profile", [
          /* Field */{
            _0: "person",
            _1: testPersonRec
          },
          /* Field */{
            _0: "descr",
            _1: testOptionStr
          }
        ], eng));

var testTupleObject = Belt_Result.getExn(SchemaDriven.tupleObject("TestTupleObject", [
          SchemaDriven.$$int,
          testOptionStr,
          SchemaDriven.bool
        ], eng));

var testVariantObject = Belt_Result.getExn(SchemaDriven.variantObject("TestVariantObject", [
          /* Field */{
            _0: "circle",
            _1: [/* Field */{
                _0: "radius",
                _1: SchemaDriven.$$float
              }]
          },
          /* Field */{
            _0: "square",
            _1: [
              /* Field */{
                _0: "width",
                _1: SchemaDriven.$$float
              },
              /* Field */{
                _0: "height",
                _1: SchemaDriven.$$float
              }
            ]
          }
        ], eng));

var testVariantContainer = Belt_Result.getExn(SchemaDriven.variantContainer("TestVariantContainer", [
          /* Field */{
            _0: "var1",
            _1: [SchemaDriven.$$float]
          },
          /* Field */{
            _0: "var2",
            _1: [
              testOptionStr,
              SchemaDriven.$$float
            ]
          },
          /* Field */{
            _0: "var3",
            _1: [SchemaDriven.string]
          }
        ], eng));

var testVariantLiteral = Belt_Result.getExn(SchemaDriven.variantLiteral("TestVariantLiteral", [
          "Banana",
          "Orange",
          "Apple"
        ], eng));

var testTupleN = Belt_Result.getExn(SchemaDriven.tupleN("TestTupleN", [
          SchemaDriven.string,
          testPersonRec,
          testOptionInt
        ], eng));

var testArray = Belt_Result.getExn(SchemaDriven.array("TestArray", SchemaDriven.string, eng));

var testList = Belt_Result.getExn(SchemaDriven.list("TestList", SchemaDriven.$$float, eng));

var testDict = Belt_Result.getExn(SchemaDriven.dict("TestDict", testOptionStr, eng));

exports._genDir = _genDir;
exports.eng = eng;
exports.testOptionInt = testOptionInt;
exports.testOptionStr = testOptionStr;
exports.testPersonRec = testPersonRec;
exports.testProfileObj = testProfileObj;
exports.testTupleObject = testTupleObject;
exports.testVariantObject = testVariantObject;
exports.testVariantContainer = testVariantContainer;
exports.testVariantLiteral = testVariantLiteral;
exports.testTupleN = testTupleN;
exports.testArray = testArray;
exports.testList = testList;
exports.testDict = testDict;
/* _genDir Not a pure module */
