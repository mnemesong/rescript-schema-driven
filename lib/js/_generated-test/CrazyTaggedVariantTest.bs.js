// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var ResultExn = require("rescript-result-exn/lib/js/src/ResultExn.bs.js");
var Belt_Result = require("rescript/lib/js/belt_Result.js");
var CrazyTaggedVariant = require("../_generated/CrazyTaggedVariant.bs.js");
var Mocha$RescriptMocha = require("rescript-mocha/lib/js/src/Mocha.bs.js");
var Assert$RescriptMocha = require("rescript-mocha/lib/js/src/Assert.bs.js");

Mocha$RescriptMocha.describe("CrazyTaggedVariantTest")(undefined, undefined, undefined, (function (param) {
        Mocha$RescriptMocha.describe("test parse")(undefined, undefined, undefined, (function (param) {
                Mocha$RescriptMocha.it("test valid 1")(undefined, undefined, undefined, (function (param) {
                        var given = {
          crazyTaggedVariant: "FruitSet",
          t_0: ["Lichi", "Pinapple"]
        };
                        var result = CrazyTaggedVariant.parse(given);
                        var nominal = {
                          TAG: /* Ok */0,
                          _0: {
                            TAG: /* FruitSet */1,
                            _0: [
                              "Lichi",
                              "Pinapple"
                            ]
                          }
                        };
                        Assert$RescriptMocha.deep_equal(undefined, result, nominal);
                      }));
                Mocha$RescriptMocha.it("test invalid strip")(undefined, undefined, undefined, (function (param) {
                        var given = {
          crazyTaggedVariant: "FruitSet",
          t_0: ["Lichi", "Pinapple"],
          t_1: "extraval"
        };
                        var result = CrazyTaggedVariant.parse(given);
                        Assert$RescriptMocha.ok(Belt_Result.isError(result));
                      }));
                Mocha$RescriptMocha.it("test invalid")(undefined, undefined, undefined, (function (param) {
                        var given = {
          TAG: "FruitSet",
          t_0: ["Lichi", "Pinapple"]
        };
                        var result = CrazyTaggedVariant.parse(given);
                        Assert$RescriptMocha.ok(Belt_Result.isError(result));
                      }));
              }));
        Mocha$RescriptMocha.describe("test json")(undefined, undefined, undefined, (function (param) {
                Mocha$RescriptMocha.it("test valid 1")(undefined, undefined, undefined, (function (param) {
                        var given = {
                          TAG: /* FruitSet */1,
                          _0: [
                            "Lichi",
                            "Pinapple"
                          ]
                        };
                        var result = ResultExn.flatMap(CrazyTaggedVariant.serializeToJson(given), CrazyTaggedVariant.parseJson);
                        Assert$RescriptMocha.deep_equal(undefined, result, {
                              TAG: /* Ok */0,
                              _0: given
                            });
                      }));
              }));
      }));

/*  Not a pure module */
