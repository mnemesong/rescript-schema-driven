// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var ResultExn = require("rescript-result-exn/lib/js/src/ResultExn.bs.js");
var Belt_Result = require("rescript/lib/js/belt_Result.js");
var TestProfile = require("../_generated/TestProfile.bs.js");
var Mocha$RescriptMocha = require("rescript-mocha/lib/js/src/Mocha.bs.js");
var Assert$RescriptMocha = require("rescript-mocha/lib/js/src/Assert.bs.js");

Mocha$RescriptMocha.describe("TestProfileTest")(undefined, undefined, undefined, (function (param) {
        Mocha$RescriptMocha.describe("test parse")(undefined, undefined, undefined, (function (param) {
                Mocha$RescriptMocha.it("test valid 1")(undefined, undefined, undefined, (function (param) {
                        var given = {
          person: {
            id: 5,
            ages: 8,
            name: "John"
          },
          descr: "some descr"
        };
                        var result = TestProfile.parse(given);
                        var nominal = {
                          TAG: /* Ok */0,
                          _0: {
                            person: {
                              id: 5,
                              ages: 8,
                              name: "John"
                            },
                            descr: "some descr"
                          }
                        };
                        Assert$RescriptMocha.deep_equal(undefined, result, nominal);
                      }));
                Mocha$RescriptMocha.it("test valid 2")(undefined, undefined, undefined, (function (param) {
                        var given = {
          person: {
            id: 5,
            ages: null,
            name: ""
          },
          descr: null
        };
                        var result = TestProfile.parse(given);
                        var nominal = {
                          TAG: /* Ok */0,
                          _0: {
                            person: {
                              id: 5,
                              ages: undefined,
                              name: ""
                            },
                            descr: undefined
                          }
                        };
                        Assert$RescriptMocha.deep_equal(undefined, result, nominal);
                      }));
                Mocha$RescriptMocha.it("test invalid")(undefined, undefined, undefined, (function (param) {
                        var given = {
          person: {
            id: 5,
            ages: null,
            name: ""
          },
          descr: 12
        };
                        var result = TestProfile.parse(given);
                        Assert$RescriptMocha.ok(Belt_Result.isError(result));
                      }));
              }));
        Mocha$RescriptMocha.describe("test serialize")(undefined, undefined, undefined, (function (param) {
                Mocha$RescriptMocha.it("test valid 1")(undefined, undefined, undefined, (function (param) {
                        var given = {
                          person: {
                            id: 5,
                            ages: 8,
                            name: "John"
                          },
                          descr: undefined
                        };
                        var result = TestProfile.serialize(given);
                        var nominal = {
                          TAG: /* Ok */0,
                          _0: {
            person: {
              id: 5,
              ages: 8,
              name: "John"
            },
            descr: null
          }
                        };
                        Assert$RescriptMocha.deep_equal(undefined, result, nominal);
                      }));
              }));
        Mocha$RescriptMocha.describe("test json")(undefined, undefined, undefined, (function (param) {
                Mocha$RescriptMocha.it("test valid 1")(undefined, undefined, undefined, (function (param) {
                        var given = {
                          person: {
                            id: 5,
                            ages: 8,
                            name: "John"
                          },
                          descr: undefined
                        };
                        var result = ResultExn.flatMap(TestProfile.serializeToJson(given), TestProfile.parseJson);
                        Assert$RescriptMocha.deep_equal(undefined, result, {
                              TAG: /* Ok */0,
                              _0: given
                            });
                      }));
              }));
      }));

/*  Not a pure module */
