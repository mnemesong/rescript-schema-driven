// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var ResultExn = require("rescript-result-exn/lib/js/src/ResultExn.bs.js");
var TestTupleN = require("../_generated/TestTupleN.bs.js");
var Belt_Result = require("rescript/lib/js/belt_Result.js");
var Mocha$RescriptMocha = require("rescript-mocha/lib/js/src/Mocha.bs.js");
var Assert$RescriptMocha = require("rescript-mocha/lib/js/src/Assert.bs.js");

Mocha$RescriptMocha.describe("TestTupleNTest")(undefined, undefined, undefined, (function (param) {
        Mocha$RescriptMocha.describe("test parse")(undefined, undefined, undefined, (function (param) {
                Mocha$RescriptMocha.it("test valid 1")(undefined, undefined, undefined, (function (param) {
                        var given = ["dsfas asd", {
          id:  41,
          ages:  null,
          name:  "Mary"
        }, 24];
                        var result = TestTupleN.parse(given);
                        Assert$RescriptMocha.deep_equal(undefined, result, {
                              TAG: /* Ok */0,
                              _0: [
                                "dsfas asd",
                                {
                                  id: 41,
                                  ages: undefined,
                                  name: "Mary"
                                },
                                24
                              ]
                            });
                      }));
                Mocha$RescriptMocha.it("test invalid")(undefined, undefined, undefined, (function (param) {
                        var given = ["dsfas asd", {
          id:  41,
          name:  "Mary"
        }, 24];
                        var result = TestTupleN.parse(given);
                        Assert$RescriptMocha.ok(Belt_Result.isError(result));
                      }));
              }));
        Mocha$RescriptMocha.describe("test serialize")(undefined, undefined, undefined, (function (param) {
                Mocha$RescriptMocha.it("test valid 1")(undefined, undefined, undefined, (function (param) {
                        var result = TestTupleN.serialize([
                              "dsfas asd",
                              {
                                id: 41,
                                ages: undefined,
                                name: "Mary"
                              },
                              24
                            ]);
                        var nominal = {
                          TAG: /* Ok */0,
                          _0: ["dsfas asd", {
          id:  41,
          ages:  null,
          name:  "Mary"
        }, 24]
                        };
                        Assert$RescriptMocha.deep_equal(undefined, result, nominal);
                      }));
              }));
        Mocha$RescriptMocha.describe("test json")(undefined, undefined, undefined, (function (param) {
                Mocha$RescriptMocha.it("test valid 1")(undefined, undefined, undefined, (function (param) {
                        var given = [
                          "dsfas asd",
                          {
                            id: 41,
                            ages: undefined,
                            name: "Mary"
                          },
                          24
                        ];
                        var result = ResultExn.flatMap(TestTupleN.serializeToJson(given), TestTupleN.parseJson);
                        Assert$RescriptMocha.deep_equal(undefined, result, {
                              TAG: /* Ok */0,
                              _0: given
                            });
                      }));
                Mocha$RescriptMocha.it("test valid 2")(undefined, undefined, undefined, (function (param) {
                        var given = [
                          "",
                          {
                            id: 41,
                            ages: -3,
                            name: ""
                          },
                          undefined
                        ];
                        var result = ResultExn.flatMap(TestTupleN.serializeToJson(given), TestTupleN.parseJson);
                        Assert$RescriptMocha.deep_equal(undefined, result, {
                              TAG: /* Ok */0,
                              _0: given
                            });
                      }));
              }));
      }));

/*  Not a pure module */
