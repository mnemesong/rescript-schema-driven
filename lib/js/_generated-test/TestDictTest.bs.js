// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Js_dict = require("rescript/lib/js/js_dict.js");
var TestDict = require("../_generated/TestDict.bs.js");
var ResultExn = require("rescript-result-exn/lib/js/src/ResultExn.bs.js");
var Belt_Result = require("rescript/lib/js/belt_Result.js");
var Mocha$RescriptMocha = require("rescript-mocha/lib/js/src/Mocha.bs.js");
var Assert$RescriptMocha = require("rescript-mocha/lib/js/src/Assert.bs.js");

Mocha$RescriptMocha.describe("TestDictTest")(undefined, undefined, undefined, (function (param) {
        Mocha$RescriptMocha.describe("test parse")(undefined, undefined, undefined, (function (param) {
                Mocha$RescriptMocha.it("test valid 1")(undefined, undefined, undefined, (function (param) {
                        var given = {
          v1: "foo",
          v2: null
        };
                        var result = TestDict.parse(given);
                        var nominal = {
                          TAG: /* Ok */0,
                          _0: Js_dict.fromArray([
                                [
                                  "v1",
                                  "foo"
                                ],
                                [
                                  "v2",
                                  undefined
                                ]
                              ])
                        };
                        Assert$RescriptMocha.deep_equal(undefined, result, nominal);
                      }));
                Mocha$RescriptMocha.it("test invalid")(undefined, undefined, undefined, (function (param) {
                        var given = {
          v1: "foo",
          v2: 0
        };
                        var result = TestDict.parse(given);
                        Assert$RescriptMocha.ok(Belt_Result.isError(result));
                      }));
              }));
        Mocha$RescriptMocha.describe("test serialize")(undefined, undefined, undefined, (function (param) {
                Mocha$RescriptMocha.it("test valid 1")(undefined, undefined, undefined, (function (param) {
                        var given = Js_dict.fromArray([
                              [
                                "v1",
                                "foo"
                              ],
                              [
                                "v2",
                                undefined
                              ]
                            ]);
                        var result = TestDict.serialize(given);
                        var nominal = {
                          TAG: /* Ok */0,
                          _0: {
          v1: "foo",
          v2: null
        }
                        };
                        Assert$RescriptMocha.deep_equal(undefined, result, nominal);
                      }));
                Mocha$RescriptMocha.it("test valid 2")(undefined, undefined, undefined, (function (param) {
                        var given = Js_dict.fromArray([]);
                        var result = TestDict.serialize(given);
                        var nominal = {
                          TAG: /* Ok */0,
                          _0: {}
                        };
                        Assert$RescriptMocha.deep_equal(undefined, result, nominal);
                      }));
              }));
        Mocha$RescriptMocha.describe("test json")(undefined, undefined, undefined, (function (param) {
                Mocha$RescriptMocha.it("test valid 1")(undefined, undefined, undefined, (function (param) {
                        var given = Js_dict.fromArray([
                              [
                                "v1",
                                "foo"
                              ],
                              [
                                "v2",
                                undefined
                              ]
                            ]);
                        var result = ResultExn.flatMap(TestDict.serializeToJson(given), TestDict.parseJson);
                        Assert$RescriptMocha.deep_equal(undefined, result, {
                              TAG: /* Ok */0,
                              _0: given
                            });
                      }));
                Mocha$RescriptMocha.it("test valid 2")(undefined, undefined, undefined, (function (param) {
                        var given = Js_dict.fromArray([]);
                        var result = ResultExn.flatMap(TestDict.serializeToJson(given), TestDict.parseJson);
                        Assert$RescriptMocha.deep_equal(undefined, result, {
                              TAG: /* Ok */0,
                              _0: given
                            });
                      }));
              }));
      }));

/*  Not a pure module */
